import{_ as n,o as s,c as a,a as t}from"./app.4a9c1875.js";const p={},e=t(`<h1 id="_8-17\u65B0\u7279\u6027api" tabindex="-1"><a class="header-anchor" href="#_8-17\u65B0\u7279\u6027api" aria-hidden="true">#</a> 8-17\u65B0\u7279\u6027API</h1><h2 id="jdk8" tabindex="-1"><a class="header-anchor" href="#jdk8" aria-hidden="true">#</a> JDK8</h2><p>Stream \u7F16\u7A0B</p><p>Optional \u89E3\u51B3\u7A7A\u6307\u9488\u5F02\u5E38</p><h2 id="jdk9" tabindex="-1"><a class="header-anchor" href="#jdk9" aria-hidden="true">#</a> JDk9</h2><h3 id="\u63A5\u53E3\u79C1\u6709\u5316" tabindex="-1"><a class="header-anchor" href="#\u63A5\u53E3\u79C1\u6709\u5316" aria-hidden="true">#</a> \u63A5\u53E3\u79C1\u6709\u5316</h3><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">// \u63A5\u53E3\u79C1\u6709\u65B9\u6CD5</span>
<span class="token keyword">interface</span> interfaceTest <span class="token punctuation">{</span>
    <span class="token comment">// public \u65B9\u6CD5</span>
    <span class="token keyword">void</span> <span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// \u79C1\u6709\u65B9\u6CD5</span>
    <span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Log Message : &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">default</span> <span class="token keyword">void</span> <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;interfaceTest---getConnection&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">default</span> <span class="token keyword">void</span> <span class="token function">closeConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;interfaceTest---closeConnection&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">log</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token comment">// \u5B9E\u73B0\u7C7B</span>
<span class="token keyword">class</span> interfaceTestImpl <span class="token keyword">implements</span> interfaceTest <span class="token punctuation">{</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;---------------------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            interfaceTest<span class="token punctuation">.</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;--impl---getConnection&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">closeConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            interfaceTest<span class="token punctuation">.</span><span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">closeConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;--impl---closeConnection&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

<span class="token comment">//\u7ED3\u679C</span>
<span class="token comment">//interfaceTest---getConnection</span>
<span class="token comment">//Log Message : </span>
<span class="token comment">//--impl---getConnection</span>
<span class="token comment">//interfaceTest---closeConnection</span>
<span class="token comment">//Log Message : </span>
<span class="token comment">//--impl---closeConnection</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="list\u65B0api" tabindex="-1"><a class="header-anchor" href="#list\u65B0api" aria-hidden="true">#</a> List\u65B0API</h3><p><strong>\u751F\u6210\u4E0D\u53EF\u53D8\u7684\u96C6\u5408</strong></p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code> List.of(...),Set.of(....),Map.of(....);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>@Test
public void after(){
    // \u4E0D\u53EF\u53D8 \u4E0D\u80FD\u4E3A\u7A7A
    List&lt;Integer&gt; integers = List.of(1, 2, 3, 4, 5);
    Set&lt;Integer&gt; integers1 = Set.of(1, 2, 3, 4, 5);
    Map&lt;String, String&gt; key1 = Map.of(&quot;key1&quot;, &quot;value1&quot;, &quot;key2&quot;, &quot;value2&quot;, &quot;key3&quot;, &quot;value3&quot;);
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="\u8FDB\u7A0B\u65B0api" tabindex="-1"><a class="header-anchor" href="#\u8FDB\u7A0B\u65B0api" aria-hidden="true">#</a> \u8FDB\u7A0B\u65B0API</h3><p>Java 9 \u5411 <strong>Process</strong> API \u6DFB\u52A0\u4E86\u4E00\u4E2A\u540D\u4E3A <strong>ProcessHandle</strong> \u7684\u63A5\u53E3\u6765\u589E\u5F3A java.lang.Process \u7C7B\u3002</p><p>ProcessHandle \u63A5\u53E3\u7684\u5B9E\u4F8B\u6807\u8BC6\u4E00\u4E2A\u672C\u5730\u8FDB\u7A0B\uFF0C\u5B83\u5141\u8BB8\u67E5\u8BE2\u8FDB\u7A0B\u72B6\u6001\u5E76\u7BA1\u7406\u8FDB\u7A0B\u3002</p><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token doc-comment comment">/**
     * \u6253\u5370\u6267\u884CJava\u7684\u8FDB\u7A0B\u4FE1\u606F
     * */</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testProcessInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">ProcessHandle</span> processHandle <span class="token operator">=</span> <span class="token class-name">ProcessHandle</span><span class="token punctuation">.</span><span class="token function">current</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">ProcessHandle<span class="token punctuation">.</span>Info</span> infos <span class="token operator">=</span> processHandle<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Process info =&gt;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;PID: %s%n&quot;</span><span class="token punctuation">,</span> processHandle<span class="token punctuation">.</span><span class="token function">pid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        infos<span class="token punctuation">.</span><span class="token function">arguments</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span>arg <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;Arguments: %s%n&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        infos<span class="token punctuation">.</span><span class="token function">command</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span>command <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;Command: %s%n&quot;</span><span class="token punctuation">,</span> command<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        infos<span class="token punctuation">.</span><span class="token function">commandLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span>commandLine <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;Command line: %s%n&quot;</span><span class="token punctuation">,</span> commandLine<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        infos<span class="token punctuation">.</span><span class="token function">startInstant</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span>startInstant <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;Start time: %s%n&quot;</span><span class="token punctuation">,</span> startInstant<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        infos<span class="token punctuation">.</span><span class="token function">totalCpuDuration</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span>cpuDuration <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;CPU time: %s%n&quot;</span><span class="token punctuation">,</span> cpuDuration<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        infos<span class="token punctuation">.</span><span class="token function">user</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span>user <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;User: %s%n&quot;</span><span class="token punctuation">,</span> user<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token doc-comment comment">/**
     * \u6253\u5F00Windows\u8BB0\u4E8B\u672C \u7136\u540E\u5173\u95ED
     * */</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testControlProcess</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
        <span class="token keyword">final</span> <span class="token class-name">ProcessBuilder</span> processBuilder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ProcessBuilder</span><span class="token punctuation">(</span><span class="token string">&quot;notepad.exe&quot;</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">inheritIO</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">ProcessHandle</span> processHandle <span class="token operator">=</span> processBuilder<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHandle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">CountDownLatch</span> latch <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CountDownLatch</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        processHandle<span class="token punctuation">.</span><span class="token function">onExit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">whenCompleteAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span>handle<span class="token punctuation">,</span> throwable<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>throwable <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>handle<span class="token punctuation">.</span><span class="token function">pid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                throwable<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            latch<span class="token punctuation">.</span><span class="token function">countDown</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">final</span> <span class="token class-name">Thread</span> shutdownThread <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">try</span> <span class="token punctuation">{</span>
                <span class="token class-name">Thread</span><span class="token punctuation">.</span><span class="token function">sleep</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>processHandle<span class="token punctuation">.</span><span class="token function">supportsNormalTermination</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;destroy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                processHandle<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                processHandle<span class="token punctuation">.</span><span class="token function">destroyForcibly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;destroy1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                processHandle<span class="token punctuation">.</span><span class="token function">destroy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        shutdownThread<span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            shutdownThread<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            latch<span class="token punctuation">.</span><span class="token function">await</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">InterruptedException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="optional\u65B0api" tabindex="-1"><a class="header-anchor" href="#optional\u65B0api" aria-hidden="true">#</a> Optional\u65B0API</h3><h4 id="stream-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#stream-\u65B9\u6CD5" aria-hidden="true">#</a> stream() \u65B9\u6CD5</h4><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>public Stream&lt;T&gt; stream()
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>stream \u65B9\u6CD5\u7684\u4F5C\u7528\u5C31\u662F\u5C06 Optional \u8F6C\u4E3A\u4E00\u4E2A Stream\uFF0C\u5982\u679C\u8BE5 Optional \u4E2D\u5305\u542B\u503C\uFF0C\u90A3\u4E48\u5C31\u8FD4\u56DE\u5305\u542B\u8FD9\u4E2A\u503C\u7684 Stream\uFF0C\u5426\u5219\u8FD4\u56DE\u4E00\u4E2A\u7A7A\u7684 Stream\uFF08Stream.empty()\uFF09\u3002</p><h4 id="ifpresentorelse-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#ifpresentorelse-\u65B9\u6CD5" aria-hidden="true">#</a> ifPresentOrElse() \u65B9\u6CD5</h4><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>public void ifPresentOrElse(Consumer&lt;? super T&gt; action, Runnable emptyAction)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>ifPresentOrElse \u65B9\u6CD5\u7684\u6539\u8FDB\u5C31\u662F\u6709\u4E86 else\uFF0C\u63A5\u53D7\u4E24\u4E2A\u53C2\u6570 Consumer \u548C Runnable\u3002</p><p>ifPresentOrElse \u65B9\u6CD5\u7684\u7528\u9014\u662F\uFF0C\u5982\u679C\u4E00\u4E2A Optional \u5305\u542B\u503C\uFF0C\u5219\u5BF9\u5176\u5305\u542B\u7684\u503C\u8C03\u7528\u51FD\u6570 action\uFF0C\u5373 action.accept(value)\uFF0C\u8FD9\u4E0E ifPresent \u4E00\u81F4\uFF1B\u4E0E ifPresent \u65B9\u6CD5\u7684\u533A\u522B\u5728\u4E8E\uFF0CifPresentOrElse \u8FD8\u6709\u7B2C\u4E8C\u4E2A\u53C2\u6570 emptyAction \u2014\u2014 \u5982\u679C Optional \u4E0D\u5305\u542B\u503C\uFF0C\u90A3\u4E48 ifPresentOrElse \u4FBF\u4F1A\u8C03\u7528 emptyAction\uFF0C\u5373 emptyAction.run()\u3002</p><h4 id="or-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#or-\u65B9\u6CD5" aria-hidden="true">#</a> or() \u65B9\u6CD5</h4><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>public Optional&lt;T&gt; or(Supplier&lt;? extends Optional&lt;? extends T&gt;&gt; supplier)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5982\u679C\u503C\u5B58\u5728\uFF0C\u8FD4\u56DE Optional \u6307\u5B9A\u7684\u503C\uFF0C\u5426\u5219\u8FD4\u56DE\u4E00\u4E2A\u9884\u8BBE\u7684\u503C\u3002</p><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Optional</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span>asList <span class="token punctuation">(</span>
                <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;A&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;B&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//jdk8</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> filteredList <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> o<span class="token punctuation">.</span><span class="token function">isPresent</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//JDK 9</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> filteredListJava9 <span class="token operator">=</span> list<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">flatMap</span><span class="token punctuation">(</span><span class="token class-name">Optional</span><span class="token operator">::</span><span class="token function">stream</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>filteredListJava9<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//[A,B]</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/*
    * \u5982\u679C\u4E3A\u7A7A\u5219\u6267\u884C\u540E\u9762\u7684\u5185\u5BB9
    * */</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testifPresentOrElse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">&gt;</span></span> optional <span class="token operator">=</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        optional<span class="token punctuation">.</span><span class="token function">ifPresentOrElse</span><span class="token punctuation">(</span> x <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Value: &quot;</span> <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Not Present.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        optional <span class="token operator">=</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        optional<span class="token punctuation">.</span><span class="token function">ifPresentOrElse</span><span class="token punctuation">(</span> x <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Value: &quot;</span> <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Not Present.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//Value: 1</span>
        <span class="token comment">//Not Present.</span>
    <span class="token punctuation">}</span>

    <span class="token comment">/*
    * \u5982\u679C\u503C\u5B58\u5728\uFF0C\u8FD4\u56DE Optional \u6307\u5B9A\u7684\u503C\uFF0C\u5426\u5219\u8FD4\u56DE\u4E00\u4E2A\u9884\u8BBE\u7684\u503C\u3002
    * */</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testOr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> optional1 <span class="token operator">=</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;Mahesh&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">Supplier</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Optional</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> supplierString <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;Not Present&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        optional1 <span class="token operator">=</span> optional1<span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span>supplierString<span class="token punctuation">)</span><span class="token punctuation">;</span>
        optional1<span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span> x <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Value: &quot;</span> <span class="token operator">+</span> x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        optional1 <span class="token operator">=</span> <span class="token class-name">Optional</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        optional1 <span class="token operator">=</span> optional1<span class="token punctuation">.</span><span class="token function">or</span><span class="token punctuation">(</span> supplierString<span class="token punctuation">)</span><span class="token punctuation">;</span>
        optional1<span class="token punctuation">.</span><span class="token function">ifPresent</span><span class="token punctuation">(</span> x <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;Value: &quot;</span> <span class="token operator">+</span> x
        <span class="token comment">//Value: Mahesh</span>
		<span class="token comment">//Value: Not Present</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="deprecated-\u6CE8\u89E3" tabindex="-1"><a class="header-anchor" href="#deprecated-\u6CE8\u89E3" aria-hidden="true">#</a> @Deprecated \u6CE8\u89E3</h3><p>Java 9 \u4E2D\u6CE8\u89E3\u589E\u52A0\u4E86\u4E24\u4E2A\u65B0\u5143\u7D20\uFF1A<strong>since</strong> \u548C <strong>forRemoval</strong>\u3002</p><ul><li><strong>since</strong>: \u5143\u7D20\u6307\u5B9A\u5DF2\u6CE8\u89E3\u7684API\u5143\u7D20\u5DF2\u88AB\u5F03\u7528\u7684\u7248\u672C\u3002</li><li><strong>forRemoval</strong>: \u5143\u7D20\u8868\u793A\u6CE8\u89E3\u7684 API \u5143\u7D20\u5728\u5C06\u6765\u7684\u7248\u672C\u4E2D\u88AB\u5220\u9664\uFF0C\u5E94\u8BE5\u8FC1\u79FB API\u3002</li></ul><h3 id="\u6539\u8FDB\u7684-try-with-resources" tabindex="-1"><a class="header-anchor" href="#\u6539\u8FDB\u7684-try-with-resources" aria-hidden="true">#</a> \u6539\u8FDB\u7684 try-with-resources</h3><p>try-with-resources \u58F0\u660E\u5728 JDK 9 \u5DF2\u5F97\u5230\u6539\u8FDB\u3002\u5982\u679C\u4F60\u5DF2\u7ECF\u6709\u4E00\u4E2A\u8D44\u6E90\u662F final \u6216\u7B49\u6548\u4E8E final \u53D8\u91CF,\u60A8\u53EF\u4EE5\u5728 try-with-resources \u8BED\u53E5\u4E2D\u4F7F\u7528\u8BE5\u53D8\u91CF\uFF0C\u800C\u65E0\u9700\u5728 try-with-resources \u8BED\u53E5\u4E2D\u58F0\u660E\u4E00\u4E2A\u65B0\u53D8\u91CF\u3002</p><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>   
   <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
       
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">readData</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token function">readData1</span><span class="token punctuation">(</span><span class="token string">&quot;test&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span> 
   <span class="token comment">// jdk 7</span>
   <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">readData</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
      <span class="token class-name">Reader</span> inputString <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringReader</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">BufferedReader</span> br <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span>inputString<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">BufferedReader</span> br1 <span class="token operator">=</span> br<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">return</span> br1<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
   <span class="token comment">// jdk 9</span>
   <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">readData1</span><span class="token punctuation">(</span><span class="token class-name">String</span> message<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
      <span class="token class-name">Reader</span> inputString <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringReader</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token class-name">BufferedReader</span> br <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span>inputString<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">try</span> <span class="token punctuation">(</span>br<span class="token punctuation">)</span> <span class="token punctuation">{</span>
         <span class="token keyword">return</span> br<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
   <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="jdk10" tabindex="-1"><a class="header-anchor" href="#jdk10" aria-hidden="true">#</a> JDK10</h2><h3 id="list\u65B0api-1" tabindex="-1"><a class="header-anchor" href="#list\u65B0api-1" aria-hidden="true">#</a> List\u65B0API</h3><p>java10\u65B0\u589E<code>List.copyOf</code>, <code>Set.copyOf</code>,\u53CA<code>Map.copyOf</code>\u7528\u6765\u4ECE\u5DF2\u6709\u96C6\u5408<strong>\u521B\u5EFAImmutableCollections\uFF08\u4E0D\u53EF\u53D8\u96C6\u5408</strong>\uFF09</p><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testCollectionCopy</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token class-name">IntStream</span><span class="token punctuation">.</span><span class="token function">rangeClosed</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">mapToObj</span><span class="token punctuation">(</span>i <span class="token operator">-&gt;</span> <span class="token string">&quot;num&quot;</span><span class="token operator">+</span>i<span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> newList <span class="token operator">=</span> <span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">copyOf</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>
        newList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;not allowed&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="optional\u65B0api-1" tabindex="-1"><a class="header-anchor" href="#optional\u65B0api-1" aria-hidden="true">#</a> Optional\u65B0API</h3><h4 id="orelsethrow" tabindex="-1"><a class="header-anchor" href="#orelsethrow" aria-hidden="true">#</a> OrElseThrow()</h4><p>**\u53C2\u6570\uFF1A**\u6B64\u65B9\u6CD5\u4E0D\u63A5\u53D7\u4EFB\u4F55\u5185\u5BB9\u3002</p><p>**\u8FD4\u56DE\u503C\uFF1A**\u6B64\u65B9\u6CD5\u8FD4\u56DE\u6B64OptionalInt\u63CF\u8FF0\u7684Int\u503C\u3002</p><p>**\u5F02\u5E38\uFF1A**\u5982\u679C\u4E0D\u5B58\u5728\u4EFB\u4F55\u503C\uFF0C\u5219\u6B64\u65B9\u6CD5\u5C06\u5F15\u53D1NoSuchElementException</p><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testOrElseThrow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">Optional</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> optional <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> s<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span><span class="token string">&quot;z&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">findAny</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">String</span> res <span class="token operator">=</span> optional<span class="token punctuation">.</span><span class="token function">orElseThrow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="jdk11" tabindex="-1"><a class="header-anchor" href="#jdk11" aria-hidden="true">#</a> JDK11</h2><h3 id="list\u65B0api-2" tabindex="-1"><a class="header-anchor" href="#list\u65B0api-2" aria-hidden="true">#</a> List\u65B0API</h3><h4 id="toarray-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#toarray-\u65B9\u6CD5" aria-hidden="true">#</a> toArray()\u65B9\u6CD5</h4><p>Collection\u7C7B\u65B0\u589EtoArray(IntFunction)\u7684default\u65B9\u6CD5\uFF0C\u53EF\u4EE5\u76F4\u63A5\u901A\u8FC7\u4F20\u5165IntFunction\u544A\u77E5\u8981\u8F6C\u6362\u7684\u76EE\u6807\u7C7B\u578B</p><p>\u5C06\u76F8\u5173\u7684\u503C\u62F7\u8D1D\u5230\u5176\u4ED6\u5BF9\u8C61\u4E2D\u8FDB\u884C\u8F6C\u6362</p><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>	 <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testVar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">var</span> names <span class="token operator">=</span> <span class="token class-name">Set</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;Fred&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Wilma&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Barney&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Betty&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">var</span> copy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span>names<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
        names<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span>copy<span class="token punctuation">)</span><span class="token punctuation">;</span>
        copy<span class="token punctuation">[</span>names<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;12&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>copy<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span>names<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">::</span><span class="token keyword">new</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u7ED3\u679C\u76F8\u540C</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="var" tabindex="-1"><a class="header-anchor" href="#var" aria-hidden="true">#</a> var</h3><p>\u81EA\u52A8\u5224\u65AD\u7C7B\u578B</p><h3 id="string\u65B0api" tabindex="-1"><a class="header-anchor" href="#string\u65B0api" aria-hidden="true">#</a> String\u65B0API</h3><h4 id="repeat-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#repeat-\u65B9\u6CD5" aria-hidden="true">#</a> repeat() \u65B9\u6CD5</h4><p>\u65B0\u589E\u7684 repeat() \u65B9\u6CD5\uFF0C\u80FD\u591F\u8BA9\u6211\u4EEC\u5FEB\u901F\u7684\u590D\u5236\u591A\u4E2A\u5B50\u5B57\u7B26\u4E32\u3002\u7528\u6CD5\u548C\u6548\u679C\u5982\u4E0B\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">var</span> string <span class="token operator">=</span> <span class="token string">&quot;11111 &quot;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> result <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//11111 11111</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6839\u636E repeat() \u65B9\u6CD5\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5F97\u5230\u4E00\u4E2A\u7A7A\u7684\u5B57\u7B26\u4E32\u3002\u53EA\u9700\u628A\u53C2\u6570 2 \u6539\u4E3A 0 \u5373\u53EF\u3002\u7C7B\u4F3C\u4E0B\u9762\u7684\u7528\u6CD5\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">var</span> string <span class="token operator">=</span> <span class="token string">&quot;11111 &quot;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> result <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEqualTo</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C repeat() \u65B9\u6CD5\u7684\u53C2\u6570\u662F Integer.MAX_VALUE\uFF0C\u90A3\u4E48\u5B83\u4E5F\u8FD4\u56DE\u4E00\u4E2A\u7A7A\u5B57\u7B26\u4E32\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">var</span> string <span class="token operator">=</span> <span class="token string">&quot;11111 &quot;</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> result <span class="token operator">=</span> string<span class="token punctuation">.</span><span class="token function">repeat</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span>MAX_VALUE<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">assertThat</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEqualTo</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="isblank-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#isblank-\u65B9\u6CD5" aria-hidden="true">#</a> isBlank() \u65B9\u6CD5</h4><p>java 11 \u4E2D\u65B0\u589E\u4E86 isBlank() \u65B9\u6CD5\uFF0C\u4ECE\u6B64\u4E4B\u540E\u6211\u4EEC\u518D\u4E5F\u4E0D\u9700\u8981\u7B2C\u4E09\u65B9 jar \u5305\u6765\u652F\u6301\u5224\u65AD\u662F\u7A7A\u7684\u8FD8\u662F\u5305\u542B\u7A7A\u683C\u4E86\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// true</span>
<span class="token comment">//\u62A5\u9519</span>
<span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="strip-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#strip-\u65B9\u6CD5" aria-hidden="true">#</a> strip() \u65B9\u6CD5</h4><p>\u65B0\u589E\u7684 strip() \u65B9\u6CD5\u53EF\u4EE5\u53BB\u9664\u9996\u5C3E\u7A7A\u683C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token function">assertThat</span><span class="token punctuation">(</span><span class="token string">&quot;  11111  &quot;</span><span class="token punctuation">.</span><span class="token function">strip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEqualTo</span><span class="token punctuation">(</span><span class="token string">&quot;11111&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="stripleading-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#stripleading-\u65B9\u6CD5" aria-hidden="true">#</a> stripLeading() \u65B9\u6CD5</h4><p>stripLeading() \u65B9\u6CD5\u53EF\u4EE5\u53BB\u9664\u5934\u90E8\u7A7A\u683C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token function">assertThat</span><span class="token punctuation">(</span><span class="token string">&quot;  11111  &quot;</span><span class="token punctuation">.</span> <span class="token function">stripLeading</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEqualTo</span><span class="token punctuation">(</span><span class="token string">&quot;11111  &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h4 id="striptrailing-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#striptrailing-\u65B9\u6CD5" aria-hidden="true">#</a> stripTrailing() \u65B9\u6CD5</h4><p>stripTrailing() \u65B9\u6CD5\u53BB\u9664\u5C3E\u90E8\u7A7A\u683C\u3002</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token function">assertThat</span><span class="token punctuation">(</span><span class="token string">&quot;  11111  &quot;</span><span class="token punctuation">.</span> <span class="token function">stripLeading</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">isEqualTo</span><span class="token punctuation">(</span><span class="token string">&quot;  11111&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u770B\u5B8C\u4E0A\u9762\u7684 3 \u4E2A API\uFF0C\u4F60\u53EF\u80FD\u8981\u95EE\uFF0C\u5B83\u4EEC\u662F\u4E0D\u662F\u548C trim() \u65B9\u6CD5\u7684\u4F5C\u7528\u91CD\u590D\u4E86\uFF1F\u7B54\u6848\u662F\u5E76\u4E0D\u91CD\u590D\u3002strip \u662F\u4E00\u79CD\u57FA\u4E8E Unicode \u8BC6\u522B\u66FF\u4EE3\u65B9\u6848\u3002</p><h4 id="lines-\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#lines-\u65B9\u6CD5" aria-hidden="true">#</a> lines() \u65B9\u6CD5</h4><p>\u4F7F\u7528 lines() \u65B9\u6CD5\uFF0C\u6211\u4EEC\u53EF\u4EE5\u8F7B\u677E\u5730\u5C06 String \u5B9E\u4F8B\u62C6\u5206\u4E3A Stream \uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token string">&quot;1111\\n2222&quot;</span><span class="token punctuation">.</span><span class="token function">lines</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 1111</span>
<span class="token comment">// 2222</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>	<span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testStringApi</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;   &quot;</span><span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot; L R &quot;</span><span class="token punctuation">.</span><span class="token function">strip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;@&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot; L R &quot;</span><span class="token punctuation">.</span><span class="token function">stripLeading</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;@&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot; L R &quot;</span><span class="token punctuation">.</span><span class="token function">stripTrailing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;@&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token string">&quot; 1231231\\n123\\n3342\\n1123&quot;</span><span class="token punctuation">.</span><span class="token function">lines</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> transform <span class="token operator">=</span> <span class="token string">&quot;SEW#&quot;</span><span class="token punctuation">.</span><span class="token function">transform</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> s<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>transform<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;------------%s -------%s&quot;</span><span class="token punctuation">.</span><span class="token function">formatted</span><span class="token punctuation">(</span><span class="token string">&quot;aaa&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;bbb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> name <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name<span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="jdk12-13" tabindex="-1"><a class="header-anchor" href="#jdk12-13" aria-hidden="true">#</a> JDK12-13</h2><h3 id="string-indent" tabindex="-1"><a class="header-anchor" href="#string-indent" aria-hidden="true">#</a> String.indent</h3><p>\u683C\u5F0F\u5316\u6587\u672C\u8981\u6DFB\u52A0\u5B57\u7B26\u7684\u524D\u5BFC\u7A7A\u767D\u5B57\u7B26\u6570</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testStringIndent</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;1  hello&quot;</span><span class="token punctuation">.</span><span class="token function">indent</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="string-transform" tabindex="-1"><a class="header-anchor" href="#string-transform" aria-hidden="true">#</a> String.transform</h3><p>\u5373Lambda\u8868\u8FBE\u5F0F\u7ED9\u51FA\u7684\u8BA1\u7B97\u7ED3\u679C</p><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>	<span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testStringTransform</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Object</span> transform <span class="token operator">=</span> <span class="token string">&quot;hello#&quot;</span><span class="token punctuation">.</span><span class="token function">transform</span><span class="token punctuation">(</span>s <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> s<span class="token punctuation">.</span><span class="token function">hashCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>transform<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="\u589E\u5F3A\u7684switch" tabindex="-1"><a class="header-anchor" href="#\u589E\u5F3A\u7684switch" aria-hidden="true">#</a> \u589E\u5F3A\u7684switch</h3><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSwitch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">200</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">var</span> sex <span class="token operator">=</span> <span class="token keyword">switch</span> <span class="token punctuation">(</span>i <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
                <span class="token keyword">case</span> <span class="token number">1</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;------1-------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">yield</span> <span class="token string">&quot;2222222 &quot;</span><span class="token operator">+</span>i<span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">case</span> <span class="token number">2</span> <span class="token operator">-&gt;</span>  <span class="token punctuation">{</span>
                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;----2---------&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
                    <span class="token keyword">yield</span> <span class="token string">&quot;admin &quot;</span><span class="token punctuation">;</span>
                <span class="token punctuation">}</span>
                <span class="token keyword">default</span> <span class="token operator">-&gt;</span> <span class="token string">&quot;1111 &quot;</span><span class="token operator">+</span>i<span class="token punctuation">;</span>
            <span class="token punctuation">}</span><span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>sex<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="\u6587\u672C\u5757" tabindex="-1"><a class="header-anchor" href="#\u6587\u672C\u5757" aria-hidden="true">#</a> \u6587\u672C\u5757</h3><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>	<span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testStringBlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token triple-quoted-string string">&quot;&quot;&quot;
                123
                123
                123
                &quot;&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="file-mismatch" tabindex="-1"><a class="header-anchor" href="#file-mismatch" aria-hidden="true">#</a> File.mismatch()</h3><p>\u5BF9\u6BD4\u6587\u4EF6\u5DEE\u5F02</p><p>\u8FD4\u56DE-1\uFF1A\u540C\u4E00\u6587\u4EF6\uFF0C\u6216\u8005\u4E24\u4E2A\u6587\u4EF6\u5185\u5BB9\u4E00\u6837\uFF0C\u8FD4\u56DE\u5176\u4ED6\u6570\u5B57\uFF1A\u6587\u4EF6\u5185\u5BB9\u5BF9\u6BD4\u5DEE\u5F02\u7684\u4F4D\u7F6E\uFF0C\u4ECE0\u5F00\u59CB</p><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testFilesMismatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    <span class="token class-name">FileWriter</span> fileWriter <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileWriter</span><span class="token punctuation">(</span><span class="token string">&quot;1.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    fileWriter<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    fileWriter<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    fileWriter<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;c&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    fileWriter<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">FileWriter</span> fileWriterB <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileWriter</span><span class="token punctuation">(</span><span class="token string">&quot;2.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    fileWriterB<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;a&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    fileWriterB<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;b&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    fileWriterB<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span><span class="token string">&quot;d&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    fileWriterB<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">Files</span><span class="token punctuation">.</span><span class="token function">mismatch</span><span class="token punctuation">(</span><span class="token class-name">Path</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;1.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">Path</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;2.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="teeing" tabindex="-1"><a class="header-anchor" href="#teeing" aria-hidden="true">#</a> teeing</h3><p>\u65B0\u589Eteeing\u65B9\u6CD5\u7528\u4E8E\u805A\u5408\u4E24\u4E2Astream\u7684\u7ED3\u679C</p><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token annotation punctuation">@Test</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testCollectorTeeing</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">var</span> result <span class="token operator">=</span> <span class="token class-name">Stream</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span><span class="token string">&quot;Devoxx&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Voxxed Days&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Code One&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;Basel One&quot;</span><span class="token punctuation">)</span>
            <span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">teeing</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">filtering</span><span class="token punctuation">(</span>n <span class="token operator">-&gt;</span> n<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span><span class="token string">&quot;xx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">filtering</span><span class="token punctuation">(</span>n <span class="token operator">-&gt;</span> n<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;One&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">toList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                    <span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list1<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">List</span><span class="token punctuation">.</span><span class="token function">of</span><span class="token punctuation">(</span>list1<span class="token punctuation">,</span>list2<span class="token punctuation">)</span>
            <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="exceptionallyasync" tabindex="-1"><a class="header-anchor" href="#exceptionallyasync" aria-hidden="true">#</a> exceptionallyAsync</h3><p>\u5904\u7406\u53D1\u751F\u7684\u9519\u8BEF\u548C\u8BBE\u7F6E\u53D1\u751F\u9519\u8BEF\u65F6\u7684\u8FD4\u56DE\u7684\u503C</p><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>	<span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testExceptionallyAsync</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ExecutionException</span><span class="token punctuation">,</span> <span class="token class-name">InterruptedException</span> <span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;begin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token class-name">CompletableFuture</span><span class="token punctuation">.</span><span class="token function">supplyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;calculate&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">0</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token number">100</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exceptionallyAsync</span><span class="token punctuation">(</span><span class="token punctuation">(</span>t<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;error error:{}&quot;</span><span class="token operator">+</span>t<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;result:{}&quot;</span><span class="token operator">+</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u7ED3\u679C\u4E3A\uFF1A</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>begin
calculate
error error:{}java.lang.ArithmeticException: / by zero
result:{}0
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="jdk14-15" tabindex="-1"><a class="header-anchor" href="#jdk14-15" aria-hidden="true">#</a> JDK14-15</h2><h3 id="record" tabindex="-1"><a class="header-anchor" href="#record" aria-hidden="true">#</a> record</h3><p>\u521B\u5EFA\u4E0D\u53EF\u53D8\u5BF9\u8C61</p><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>    <span class="token keyword">public</span> <span class="token keyword">record</span> <span class="token class-name">Point</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">public</span> <span class="token class-name">Point</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;(%d,%d)&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token class-name">Point</span><span class="token punctuation">(</span><span class="token keyword">int</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">this</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">Point</span> <span class="token function">of</span><span class="token punctuation">(</span><span class="token keyword">int</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
	<span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> testRecord <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">Point</span> point <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Point</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>point<span class="token punctuation">.</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>point<span class="token punctuation">.</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="\u8BED\u8A00\u63D0\u5347" tabindex="-1"><a class="header-anchor" href="#\u8BED\u8A00\u63D0\u5347" aria-hidden="true">#</a> \u8BED\u8A00\u63D0\u5347</h3><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>     <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">isBadRequestError</span><span class="token punctuation">(</span><span class="token class-name">Exception</span> ex   <span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">return</span> <span class="token punctuation">(</span>ex <span class="token keyword">instanceof</span> <span class="token class-name">HttpClientErrorException</span> rce<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
                      <span class="token class-name">HttpStatus</span><span class="token punctuation">.</span>BAD_REQUEST <span class="token operator">==</span> rce<span class="token punctuation">.</span><span class="token function">getStatusCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F46\u662F\u5728\u5224\u65AD\u5B8C\u4E4B\u540E\uFF0C\u8981\u60F3\u4F7F\u7528\u5BF9\u5E94\u7684\u5BF9\u8C61\uFF0C\u8FD8\u9700\u8981\u663E\u793A\u7684\u8FDB\u884C\u7C7B\u578B\u8F6C\u6362\u5982\u4E0B\u6240\u793A\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token comment">//\u4F20\u7EDF\u5199\u6CD5    </span>
<span class="token keyword">if</span><span class="token punctuation">(</span>site <span class="token keyword">instanceof</span> <span class="token class-name">String</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">String</span> stringSite <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>site<span class="token punctuation">;</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>stringSite<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728JDK16\u4E2D\u7684Pattern matching\u4E2D\uFF0C\u53EF\u4EE5\u8FD9\u6837\u5199\uFF1A</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code> <span class="token comment">//JDK16\u5199\u6CD5   </span>
<span class="token keyword">if</span><span class="token punctuation">(</span>site <span class="token keyword">instanceof</span> <span class="token class-name">String</span> stringSite<span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>stringSite<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="zgc\u652F\u6301windows\u548Cmacos" tabindex="-1"><a class="header-anchor" href="#zgc\u652F\u6301windows\u548Cmacos" aria-hidden="true">#</a> ZGC\u652F\u6301Windows\u548CMacos</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>-XX:+UnlockExperimentalVMOptions -XX:+UseZGC
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>ZGC\u5728JDK11\u88AB\u4F5C\u4E3Aexperimental feature\u5F15\u5165\uFF0C\u5728<strong>JDK15</strong>\u53D8\u6210<strong>Production</strong>\uFF0C\u4F46\u662F\u8FD9\u5E76\u4E0D\u662F\u66FF\u6362\u9ED8\u8BA4\u7684GC\uFF0C<strong>\u9ED8\u8BA4\u7684GC\u4ECD\u7136\u8FD8\u662FG1</strong>\uFF1B\u4E4B\u524D\u9700\u8981\u901A\u8FC7<code>-XX:+UnlockExperimentalVMOptions -XX:+UseZGC</code>\u6765\u542F\u7528ZGC\uFF0C\u73B0\u5728\u53EA\u9700\u8981-XX:+UseZGC\u5C31\u53EF\u4EE5</p><h3 id="\u6587\u672C\u5757-1" tabindex="-1"><a class="header-anchor" href="#\u6587\u672C\u5757-1" aria-hidden="true">#</a> \u6587\u672C\u5757</h3><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>	<span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testTextBlockWithTwoNewEscapeSequences</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> inOneLine <span class="token operator">=</span> <span class="token string">&quot;&quot;</span>&quot;
                <span class="token class-name">Lorem</span> ipsum dolor sit amet<span class="token punctuation">,</span> consectetur adipiscing \\
                elit<span class="token punctuation">,</span> sed <span class="token keyword">do</span> eiusmod tempor incididunt ut labore \\
                et dolore magna aliqua<span class="token punctuation">.</span>\\
                <span class="token string">&quot;&quot;</span>&quot;<span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>inOneLine<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// \u53D8\u6210\u4E00\u884C</span>

        <span class="token class-name">String</span> singleSpace <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;
                red  \\s
                green\\s
                blue \\s
                &quot;&quot;&quot;</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>singleSpace<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h3 id="sealed" tabindex="-1"><a class="header-anchor" href="#sealed" aria-hidden="true">#</a> sealed</h3><p>\u9650\u5B9A\u5B9E\u73B0\u7C7B\uFF0C\u9650\u5B9A\u7236\u7C7B\u548C\u5B50\u7C7B\u7684\u4F7F\u7528\uFF0C\u9632\u6B62\u6EE5\u7528</p><div class="custom-container tip"><p class="custom-container-title">\u63D0\u793A</p><p><code>sealed</code> \u9700\u8981\u548C<code>permits</code> \u8FDB\u884C\u914D\u5408\u4F7F\u7528\uFF0C\u7528\u4E8E\u9650\u5236\u5B50\u7C7B\u5B9E\u73B0\uFF08\u7F16\u8F91\u5668\u65E0\u6CD5\u6B63\u5E38\u7F16\u8BD1\uFF09</p><p>\u7EE7\u627F\u7531sealed \u914D\u7F6E\u7684\u7236\u7C7B \u53EA\u80FD\u4F7F\u7528 <code>final</code>\u548C<code>non-sealed</code></p></div><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>	<span class="token comment">//\u9650\u5236\u5B9E\u73B0</span>
	<span class="token keyword">public</span> <span class="token keyword">abstract</span> <span class="token keyword">sealed</span> <span class="token keyword">class</span> <span class="token class-name">Good</span> <span class="token keyword">permits</span> <span class="token class-name">Phone</span><span class="token punctuation">,</span> <span class="token class-name">Desktop</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> name<span class="token punctuation">;</span>
        <span class="token class-name">String</span> price<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
	
	<span class="token keyword">public</span> <span class="token keyword">final</span> <span class="token keyword">class</span> <span class="token class-name">Phone</span> <span class="token keyword">extends</span> <span class="token class-name">Good</span> <span class="token punctuation">{</span>
        <span class="token class-name">String</span> <span class="token class-name">Cpu</span><span class="token punctuation">;</span>
        <span class="token class-name">String</span> <span class="token class-name">Post</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u6B63\u5E38   \u4F7F\u7528 non-sealed \u663E\u793A\u7684\u8868\u793A\u4E3A\u975E\u5BC6\u5C01\u7684\u7C7B</span>
    <span class="token keyword">public</span> <span class="token keyword">non-sealed</span> <span class="token keyword">class</span> <span class="token class-name">Desktop</span> <span class="token keyword">extends</span> <span class="token class-name">Good</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

	<span class="token comment">//\u53EF\u4EE5\u6B63\u5E38\u7EE7\u627F</span>
    <span class="token keyword">public</span>  <span class="token keyword">class</span> <span class="token class-name">Desktop1</span> <span class="token keyword">extends</span> <span class="token class-name">Desktop</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>
	<span class="token comment">//\u62A5\u9519</span>
	<span class="token keyword">public</span>  <span class="token keyword">class</span> <span class="token class-name">Phone1</span> <span class="token keyword">extends</span> <span class="token class-name">Phone</span> <span class="token punctuation">{</span>
    <span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="jdk16-17" tabindex="-1"><a class="header-anchor" href="#jdk16-17" aria-hidden="true">#</a> JDK16-17</h2><h3 id="\u65B0\u7684\u968F\u673A\u6570api" tabindex="-1"><a class="header-anchor" href="#\u65B0\u7684\u968F\u673A\u6570api" aria-hidden="true">#</a> \u65B0\u7684\u968F\u673A\u6570API</h3><p>\u5F15\u5165RandomGenerator\u53CARandomGeneratorFactory\u63D0\u4F9B\u66F4\u597D\u7684\u968F\u673A\u6570\u751F\u6210</p><details class="custom-container details"><summary>\u70B9\u51FB\u67E5\u770B\u4EE3\u7801</summary><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>	<span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testRandomGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">RandomGenerator</span> generator <span class="token operator">=</span> <span class="token class-name">RandomGeneratorFactory</span><span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token class-name">RandomGeneratorFactory</span><span class="token operator">::</span><span class="token function">isJumpable</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>factory <span class="token operator">-&gt;</span> factory<span class="token punctuation">.</span><span class="token function">stateBits</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">128</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">findAny</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token class-name">RandomGeneratorFactory</span><span class="token operator">::</span><span class="token function">create</span><span class="token punctuation">)</span>
    <span class="token comment">//  if you need a \`JumpableGenerator\`:</span>
    <span class="token comment">//  .map(JumpableGenerator.class::cast)</span>
                <span class="token punctuation">.</span><span class="token function">orElseThrow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>generator<span class="token punctuation">.</span><span class="token function">nextInt</span><span class="token punctuation">(</span><span class="token number">30000</span><span class="token punctuation">,</span><span class="token number">50000</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,120),o=[e];function c(i,l){return s(),a("div",null,o)}var k=n(p,[["render",c],["__file","8-17\u65B0\u7279\u6027API.html.vue"]]);export{k as default};
