import{_ as n,o as s,c as a,a as t}from"./app.4a9c1875.js";const p={},e=t(`<h1 id="lambda\u8868\u8FBE\u5F0F\u7B80\u4ECB" tabindex="-1"><a class="header-anchor" href="#lambda\u8868\u8FBE\u5F0F\u7B80\u4ECB" aria-hidden="true">#</a> Lambda\u8868\u8FBE\u5F0F\u7B80\u4ECB</h1><h2 id="_1-java8-\u5F15\u5165\u51FD\u6570\u5F0F\u7F16\u7A0B\u98CE\u683C" tabindex="-1"><a class="header-anchor" href="#_1-java8-\u5F15\u5165\u51FD\u6570\u5F0F\u7F16\u7A0B\u98CE\u683C" aria-hidden="true">#</a> 1.Java8 \u5F15\u5165\u51FD\u6570\u5F0F\u7F16\u7A0B\u98CE\u683C</h2><p>\u51FD\u6570\u5F0F\u7F16\u7A0B\uFF1A\u5B9A\u4E49\u51FD\u6570\u4F5C\u4E3A\u4E00\u7B49\u516C\u6C11\uFF0C\u53EF\u4EE5\u8D4B\u503C\u7ED9\u53D8\u91CF\u4F5C\u4E3A\u53C2\u6570\u6216\u8005\u8FD4\u56DE\u503C\u8FDB\u884C\u4F20\u9012\uFF0C\u800CLambda\u8868\u8FBE\u5F0F\u5C31\u662FJava\u5F15\u5165\u7684\u51FD\u6570\u5F0F\u7F16\u7A0B\u7684\u4E00\u6B21\u9769\u547D\u6027\u7684\u5C1D\u8BD5\uFF0C\u7A81\u7834\u4E86\u53EA\u6709\u7C7B\u4F5C\u4E3A\u5934\u7B49\u516C\u6C11\u7684\u8BBE\u8BA1\uFF0C\u5C06\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\u8FDB\u884C\u4F20\u9012\uFF0C\u5728\u7F16\u7A0B\u65B9\u5F0F\u4E0A\u63D0\u4F9B\u4E86\u5F88\u5927\u7684\u4FBF\u6377</p><p>\u539F\u56E0\uFF1A\u5728Java\u4E4B\u540E\uFF0CJVM\u5E73\u53F0\u51FA\u73B0\u5F88\u591A\u5176\u4ED6\u7684\u7F16\u7A0B\u8BED\u8A00\uFF0C\u5982Scala\u6216\u8005Kotlin\uFF0C\u8FD9\u79CD\u591A\u8303\u5F0F\u7684\u7F16\u7A0B\u8BED\u8A00\uFF0C\u76F8\u5BF9\u6765\u8BF4\uFF0CJava\u5B8C\u5168\u9762\u5411\u5BF9\u8C61\u7684\u7F16\u7A0B\u5C31\u6709\u4E9B\u6B7B\u677F\u4E86\uFF0C\u4E3A\u4E86\u66F4\u9002\u5E94\u5F00\u53D1\u8005\u7684\u9700\u8981\uFF0CJava8\u5F00\u542F\u4E86\u63A2\u7D22\u4E4B\u8DEF\uFF0C\u800CLambda\u5C31\u662F\u4E00\u6B21\u4F1F\u5927\u7684\u9769\u547D\u6027\u7684\u5C1D\u8BD5</p><p>2.\u53EF\u4EE5\u7406\u89E3\u4E3A\u4E00\u79CD\u533F\u540D\u51FD\u6570\u7684\u4EE3\u66FF 3.\u901A\u8FC7\u884C\u4E3A\u53C2\u6570\u5316\u4F20\u9012\u4EE3\u7801</p><p>\u66FF\u4EE3\u533F\u540D\u5185\u90E8\u7C7B</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>	 <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">oldRunable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Runnable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token annotation punctuation">@Override</span>
            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;The old runable now is using!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
	<span class="token comment">/*Lambda \u8868\u8FBE\u5F0F*/</span>
	<span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">runable</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">new</span> <span class="token class-name">Thread</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;It&#39;s a lambda function!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">start</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2\u3001lambda\u8868\u8FBE\u5F0F\u7684\u5F62\u5F0F" tabindex="-1"><a class="header-anchor" href="#_2\u3001lambda\u8868\u8FBE\u5F0F\u7684\u5F62\u5F0F" aria-hidden="true">#</a> 2\u3001Lambda\u8868\u8FBE\u5F0F\u7684\u5F62\u5F0F</h2><p>1.(parameters) -&gt; expression</p><p>2.(parameters) -&gt; { statement;}</p><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u5F62\u5F0F\u4E00\uFF1A\u6CA1\u6709\u53C2\u6570
	() -&gt; System.out.println(&quot;Hello world!&quot;);
\u5F62\u5F0F\u4E8C\uFF1A\u53EA\u6709\u4E00\u4E2A\u53C2\u6570
	name -&gt; System.out.println( &quot;Hello World from&quot; + name + &quot; !&quot;);
\u5F62\u5F0F\u4E09\uFF1A\u6CA1\u6709\u53C2\u6570\uFF0C\u903B\u8F91\u590D\u6742
	() -&gt; {
			System.out.println(&quot; Hello&quot;);
			System.out.println(&quot;World&quot;);
		}
\u5F62\u5F0F\u56DB\uFF1A\u5305\u542B\u4E24\u4E2A\u53C2\u6570\u7684\u65B9\u6CD5
	BinaryOperator&lt;Long&gt; functionAdd = (x, y) -&gt; x + y;
	Long result = functionAdd.apply(1L, 2L);
\u5F62\u5F0F\u4E94\uFF1A\u5BF9\u53C2\u6570\u663E\u793A\u58F0\u660E
	BinaryOperator&lt;Long&gt; functionAdd = (Long x, Long y) -&gt; x + y;
	Long result = functionAdd.apply(1L, 2L);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_3\u3001\u51FD\u6570\u5F0F\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#_3\u3001\u51FD\u6570\u5F0F\u63A5\u53E3" aria-hidden="true">#</a> 3\u3001\u51FD\u6570\u5F0F\u63A5\u53E3</h2><p>1.\u63A5\u53E3\u4E2D\u53EA\u6709\u4E00\u4E2A\u62BD\u8C61\u65B9\u6CD5</p><p>2.Java8 \u7684\u51FD\u6570\u5F0F\u63A5\u53E3\u6CE8\u89E3\uFF1A<a href="">@FunctionInterface </a></p><p>3.\u51FD\u6570\u5F0F\u63A5\u53E3\u7684\u62BD\u8C61\u65B9\u6CD5\u7B7E\u540D\uFF1A\u51FD\u6570\u63CF\u8FF0\u7B26</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>	<span class="token annotation punctuation">@FunctionalInterface</span>
    <span class="token keyword">public</span> <span class="token keyword">interface</span>  <span class="token class-name">FuncTest</span> <span class="token punctuation">{</span>
        <span class="token keyword">void</span> <span class="token function">handleMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">public</span> <span class="token keyword">interface</span>  <span class="token class-name">FuncInterface</span> <span class="token punctuation">{</span>
        <span class="token keyword">void</span> <span class="token function">handleMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">void</span> <span class="token function">getMessageType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@FunctionalInterface</span>
    <span class="token keyword">public</span> <span class="token keyword">interface</span>  <span class="token class-name">Func</span> <span class="token keyword">extends</span> <span class="token class-name">FuncInterface</span> <span class="token punctuation">{</span>
        <span class="token keyword">void</span>  <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">default</span> <span class="token keyword">void</span> <span class="token function">handleMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token punctuation">}</span>

        <span class="token annotation punctuation">@Override</span>
        <span class="token keyword">default</span> <span class="token keyword">void</span> <span class="token function">getMessageType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>

        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

	<span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">Predicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> predicate <span class="token operator">=</span> <span class="token punctuation">(</span>str<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span><span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>predicate<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token string">&quot;123&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token class-name">FuncTest</span> f <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-&gt;</span><span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;\u5904\u7406\u6D88\u606F&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
        f<span class="token punctuation">.</span><span class="token function">handleMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_4\u3001lambda\u8868\u8FBE\u5F0F\u5BF9\u96C6\u5408\u8FDB\u884C\u8FED\u4EE3" tabindex="-1"><a class="header-anchor" href="#_4\u3001lambda\u8868\u8FBE\u5F0F\u5BF9\u96C6\u5408\u8FDB\u884C\u8FED\u4EE3" aria-hidden="true">#</a> 4\u3001lambda\u8868\u8FBE\u5F0F\u5BF9\u96C6\u5408\u8FDB\u884C\u8FED\u4EE3</h2><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>	<span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">iterTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> languages <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;java&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;scala&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;python&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//before java8</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> each<span class="token operator">:</span>languages<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>each<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//after java8</span>
        languages<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>x <span class="token operator">-&gt;</span> <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        languages<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token operator">::</span><span class="token function">println</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>	
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_5\u3001\u9AD8\u7EA7\u51FD\u6570\u5F0F\u63A5\u53E3" tabindex="-1"><a class="header-anchor" href="#_5\u3001\u9AD8\u7EA7\u51FD\u6570\u5F0F\u63A5\u53E3" aria-hidden="true">#</a> 5\u3001\u9AD8\u7EA7\u51FD\u6570\u5F0F\u63A5\u53E3</h2><p><strong>java.util.function</strong>\u4E0B\u53EF\u4EE5\u627E\u5230\u5177\u4F53\u7684\u76F8\u5173\u7684\u51FD\u6570\u5F0F\u63A5\u53E3</p><p>Predicate \uFF1Aboolean test(T t) \u7528\u4E8E\u5224\u522B\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u6BD4\u5982\u6C42\u4E00\u4E2A\u4EBA\u662F\u5426\u4E3A\u7537\u6027<br> Consumer \uFF1Avoid accept(T t) \u7528\u4E8E\u63A5\u6536\u4E00\u4E2A\u5BF9\u8C61\u8FDB\u884C\u5904\u7406\u4F46\u6CA1\u6709\u8FD4\u56DE\uFF0C\u6BD4\u5982\u63A5\u53D7\u4E00\u4E2A\u4EBA\u5E76\u6253\u5370\u4ED6\u7684\u540D\u5B57 Function&lt;T,R&gt; R apply(T t) \u8F6C\u6362\u4E00\u4E2A\u5BF9\u8C61\u4E3A\u4E0D\u540C\u7C7B\u578B\u7684\u5BF9\u8C61<br> Supplier T get(); \u63D0\u4F9B\u4E00\u4E2A\u5BF9\u8C61<br> UnaryOperator T get(T t) \u63A5\u6536\u5BF9\u8C61\u5E76\u8FD4\u56DE\u540C\u7C7B\u578B\u7684\u5BF9\u8C61<br> BinaryOpeartor T get (T,T) \u63A5\u6536\u4E24\u4E2A\u540C\u7C7B\u578B\u7684\u5BF9\u8C61\uFF0C\u5E76\u8FD4\u56DE\u4E00\u4E2A\u539F\u7C7B\u578B\u7684\u5BF9\u8C61 BiFunction \uFF1AR apply(T t, U u);\u63A5\u53D7\u4E24\u4E2A\u53C2\u6570\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u503C\uFF0C\u4EE3\u8868\u4E00\u4E2A\u4E8C\u5143\u51FD\u6570\uFF1B DoubleFunction \uFF1AR apply(double value);\u53EA\u5904\u7406double\u7C7B\u578B\u7684\u4E00\u5143\u51FD\u6570\uFF1B IntFunction \uFF1AR apply(int value);\u53EA\u5904\u7406int\u53C2\u6570\u7684\u4E00\u5143\u51FD\u6570\uFF1B LongFunction \uFF1AR apply(long value);\u53EA\u5904\u7406long\u53C2\u6570\u7684\u4E00\u5143\u51FD\u6570\uFF1B ToDoubleFunction\uFF1Adouble applyAsDouble(T value);\u8FD4\u56DEdouble\u7684\u4E00\u5143\u51FD\u6570\uFF1B ToDoubleBiFunction\uFF1Adouble applyAsDouble(T t, U u);\u8FD4\u56DEdouble\u7684\u4E8C\u5143\u51FD\u6570\uFF1B ToIntFunction\uFF1Aint applyAsInt(T value);\u8FD4\u56DEint\u7684\u4E00\u5143\u51FD\u6570\uFF1B ToIntBiFunction\uFF1Aint applyAsInt(T t, U u);\u8FD4\u56DEint\u7684\u4E8C\u5143\u51FD\u6570\uFF1B ToLongFunction\uFF1Along applyAsLong(T value);\u8FD4\u56DElong\u7684\u4E00\u5143\u51FD\u6570\uFF1B ToLongBiFunction\uFF1Along applyAsLong(T t, U u);\u8FD4\u56DElong\u7684\u4E8C\u5143\u51FD\u6570\uFF1B DoubleToIntFunction\uFF1Aint applyAsInt(double value);\u63A5\u53D7double\u8FD4\u56DEint\u7684\u4E00\u5143\u51FD\u6570\uFF1B DoubleToLongFunction\uFF1Along applyAsLong(double value);\u63A5\u53D7double\u8FD4\u56DElong\u7684\u4E00\u5143\u51FD\u6570\uFF1B IntToDoubleFunction\uFF1Adouble applyAsDouble(int value);\u63A5\u53D7int\u8FD4\u56DEdouble\u7684\u4E00\u5143\u51FD\u6570\uFF1B IntToLongFunction\uFF1Along applyAsLong(int value);\u63A5\u53D7int\u8FD4\u56DElong\u7684\u4E00\u5143\u51FD\u6570\uFF1B LongToDoubleFunction\uFF1Adouble applyAsDouble(long value);\u63A5\u53D7long\u8FD4\u56DEdouble\u7684\u4E00\u5143\u51FD\u6570\uFF1B LongToIntFunction\uFF1Aint applyAsInt(long value);\u63A5\u53D7long\u8FD4\u56DEint\u7684\u4E00\u5143\u51FD\u6570\uFF1B</p><h2 id="_6\u3001\u65B9\u6CD5\u5F15\u7528" tabindex="-1"><a class="header-anchor" href="#_6\u3001\u65B9\u6CD5\u5F15\u7528" aria-hidden="true">#</a> 6\u3001\u65B9\u6CD5\u5F15\u7528</h2><p>\u8C03\u7528\u7279\u5B9A\u65B9\u6CD5\u7684Lambda\u8868\u8FBE\u5F0F\u7684\u4E00\u79CD\u5FEB\u6377\u5199\u6CD5\uFF0C\u53EF\u4EE5\u8BA9\u4F60\u91CD\u590D\u4F7F\u7528\u73B0\u6709\u7684\u65B9\u6CD5\u5B9A\u4E49\uFF0C\u5E76\u50CFLambda\u8868\u8FBE\u5F0F\u4E00\u6837\u4F20\u9012\u4ED6\u4EEC</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code>  <span class="token class-name">Sku</span>			<span class="token operator">::</span>			<span class="token function">getSkuPrice</span>
  \u76EE\u6807\u5F15\u7528		\u53CC\u5192\u53F7\u5206\u9694\u7B26		  \u65B9\u6CD5\u540D

\u6307\u5411\u9759\u6001\u65B9\u6CD5\u7684\u65B9\u6CD5\u5F15\u7528\uFF1A	
	<span class="token comment">//(args) -&gt; ClassName.staticMethod(args);  </span>
	<span class="token comment">//ClassName::staticMethod</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> consumer1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span> number<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>number<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> consumer2 <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token operator">::</span><span class="token function">parseInt</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

\u6307\u5411\u4EFB\u610F\u5B9E\u4F8B\u65B9\u6CD5\u7684\u65B9\u6CD5\u5F15\u7528\uFF1A
	<span class="token comment">//(args) -&gt; ClassName.instanceMethod();</span>
	<span class="token comment">//ClassName::instanceMethod</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> consumer1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> str<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> consumer2 <span class="token operator">=</span> <span class="token class-name">String</span><span class="token operator">::</span><span class="token function">length</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

\u6307\u5411\u73B0\u6709\u5BF9\u8C61\u7684\u5B9E\u4F8B\u65B9\u6CD5\u7684\u65B9\u6CD5\u5F15\u7528\uFF1A
	<span class="token comment">//(args) -&gt; object.instanceMethod(args)</span>
	<span class="token comment">//object::instanceMethod</span>
	<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">test3</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token class-name">StringBuilder</span> sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> consumer1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span> str<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> consumer2 <span class="token operator">=</span> sb<span class="token operator">::</span><span class="token function">append</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,24),o=[e];function c(l,i){return s(),a("div",null,o)}var d=n(p,[["render",c],["__file","Lambda\u8868\u8FBE\u5F0F.html.vue"]]);export{d as default};
